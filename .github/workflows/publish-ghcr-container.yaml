name: Publish multiarch images on ghcr.io
on:
  push:
    branches:
      - master
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  OPERATOR_IMAGE_NAME: ${{ github.repository }}
  LOGICAL_BACKUP_IMAGE_NAME: ${{ github.repository_owner }}/logical-backup
  OPERATOR_UI_IMAGE_NAME: ${{ github.repository_owner }}/postgres-operator-ui

  # different archs for the image
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  operator-docker:
    name: Build and push postgres-operator multiarch images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
            platforms: ${{ env.PLATFORMS }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha
            type=raw,value={{branch}}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: ${{ env.PLATFORMS }}
          file: ./docker/Dockerfile-multi-arch
          tags: ${{ steps.meta.outputs.tags }}

  logical-backup-docker:
    name: Build and push logical-backup multiarch images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.LOGICAL_BACKUP_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha
            type=raw,value={{branch}}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: ${{ env.PLATFORMS }}
          context: ./docker/logical-backup
          tags: ${{ steps.meta.outputs.tags }}

  operator-ui-docker:
    name: Build and push postgres-operator-ui multiarch images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.OPERATOR_UI_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha
            type=raw,value={{branch}}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: ${{ env.PLATFORMS }}
          context: ./ui
          tags: ${{ steps.meta.outputs.tags }}
